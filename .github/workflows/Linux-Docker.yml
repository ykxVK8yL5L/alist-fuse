name: Release for Linux And Docker

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release'
        required: true
        default: 'v0.1.1'

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [
          { target: "x86_64-unknown-linux-musl", image_tag: "x86_64-musl", wheel: true, deb: true },
          { target: "i686-unknown-linux-musl", image_tag: "i686-musl", wheel: true, deb: true },
          { target: "aarch64-unknown-linux-musl", image_tag: "aarch64-musl", wheel: true, deb: true },
          { target: "armv7-unknown-linux-musleabihf", image_tag: "armv7-musleabihf", wheel: true, deb: true },
          { target: "armv7-unknown-linux-musleabi", image_tag: "armv7-musleabi", wheel: false, deb: true },
          { target: "arm-unknown-linux-musleabihf", image_tag: "arm-musleabihf", wheel: false, deb: false },
          { target: "arm-unknown-linux-musleabi", image_tag: "arm-musleabi", wheel: false, deb: false },
        ]
    container:
      image: docker://messense/rust-musl-cross:${{ matrix.platform.image_tag }}
      env:
        CFLAGS_armv7_unknown_linux_musleabihf: '-mfpu=vfpv3-d16'
    steps:
      - uses: actions/checkout@v2
      - name: Cache cargo build
        uses: Swatinem/rust-cache@v1
        with:
          key: ${{ matrix.platform.target }}
      - name: Build wheels - manylinux
        uses: messense/maturin-action@main
        with:
          target: ${{ matrix.platform.target }}
          manylinux: auto
          container: off
          args: --no-sdist --release -o dist --strip --cargo-extra-args="--no-default-features --features rustls-tls"
      - name: Build wheels - musllinux
        if: matrix.platform.wheel
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          manylinux: musllinux_1_1
          container: off
          args: --no-sdist --release -o dist --strip --cargo-extra-args="--no-default-features --features rustls-tls"
      - name: Install cargo packages
        if: matrix.platform.deb
        run: |
          which cargo-deb > /dev/null || cargo install --target `rustc -vV | grep host: | awk '{print $2}'` cargo-deb
          which cargo-generate-rpm > /dev/null || cargo install --target `rustc -vV | grep host: | awk '{print $2}'` cargo-generate-rpm
      - name: Build Debian package
        if: matrix.platform.deb
        run: cargo deb --target=${{ matrix.platform.target }} --no-build --no-strip
      - name: Build RPM package
        if: matrix.platform.deb
        run: cargo generate-rpm --target=${{ matrix.platform.target }} --payload-compress none
      - name: Upload wheels
        if: matrix.platform.wheel
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist
          if-no-files-found: error
      - name: Upx compress binary
        uses: crazy-max/ghaction-upx@v1
        with:
          version: latest
          files: target/${{ matrix.platform.target }}/release/alist-fuse
      - name: Upload binary artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.platform.target }}-bin
          path: target/${{ matrix.platform.target }}/release/alist-fuse
          if-no-files-found: error
      - name: Upload deb artifacts
        if: matrix.platform.deb
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.platform.target }}-deb
          path: target/${{ matrix.platform.target }}/debian/alist-fuse_*.deb
          if-no-files-found: error
      - name: Upload RPM artifacts
        if: matrix.platform.deb
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.platform.target }}-rpm
          path: target/${{ matrix.platform.target }}/generate-rpm/alist-fuse*.rpm
          if-no-files-found: error
      - name: Archive binary
        run: |
          cd target/${{ matrix.platform.target }}/release
          tar czvf alist-fuse-${{ github.event.inputs.tag }}.${{ matrix.platform.target }}.tar.gz alist-fuse
          shasum -a 256 alist-fuse-${{ github.event.inputs.tag }}.${{ matrix.platform.target }}.tar.gz > alist-fuse-${{ github.event.inputs.tag }}.${{ matrix.platform.target }}.tar.gz.sha256
          cd -
      - name: Upload binary to GitHub Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/${{ matrix.platform.target }}/release/alist-fuse*.tar.gz*
          file_glob: true
          overwrite: true
          tag: "refs/tags/${{ github.event.inputs.tag }}"
      - name: Upload deb to GitHub Release
        if: matrix.platform.deb
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/${{ matrix.platform.target }}/debian/alist-fuse_*.deb
          file_glob: true
          overwrite: true
          tag: "refs/tags/${{ github.event.inputs.tag }}"
      - name: Upload RPM to GitHub Release
        uses: svenstaro/upload-release-action@v2
        if: matrix.platform.deb
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/${{ matrix.platform.target }}/generate-rpm/alist-fuse*.rpm
          file_glob: true
          overwrite: true
          tag: "refs/tags/${{ github.event.inputs.tag }}"
      - name: Remove cached deb and RPM packages
        if: matrix.platform.deb
        run: |
          rm -rf target/${{ matrix.platform.target }}/debian
          rm -rf target/${{ matrix.platform.target }}/generate-rpm
  
  docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [ linux ]
    environment: Docker Hub
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: x86_64-unknown-linux-musl-bin
      - run: |
          chmod a+x alist-fuse
          mv alist-fuse alist-fuse-amd64
      - uses: actions/download-artifact@v2
        with:
          name: i686-unknown-linux-musl-bin
      - run: |
          chmod a+x alist-fuse
          mv alist-fuse alist-fuse-386
      - uses: actions/download-artifact@v2
        with:
          name: aarch64-unknown-linux-musl-bin
      - run: |
          chmod a+x alist-fuse
          mv alist-fuse alist-fuse-arm64
      - uses: actions/download-artifact@v2
        with:
          name: armv7-unknown-linux-musleabihf-bin
      - run: |
          chmod a+x alist-fuse
          mv alist-fuse alist-fuse-armv7
      - uses: actions/download-artifact@v2
        with:
          name: arm-unknown-linux-musleabihf-bin
      - run: |
          chmod a+x alist-fuse
          mv alist-fuse alist-fuse-armv6
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ykxVK8yL5L/alist-fuse
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Setup QEMU
        uses: dbhi/qus/action@main
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{secrets.DOCKER_USER}}
          password: ${{secrets.DOCKER_PASSWORD}}
      - name: docker build
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/386,linux/arm64,linux/arm/v7,linux/arm/v6
          push: ${{ github.event_name != 'pull_request' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')) }}
          tags: ykxvk8yl5l/alist-fuse:latest
          labels: ${{ steps.meta.outputs.labels }}  

  